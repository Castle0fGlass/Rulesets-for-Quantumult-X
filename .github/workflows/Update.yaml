name: Weekly ACL Rules Sync

on:
  schedule:
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  update-rules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar
          wget https://github.com/tindy2013/subconverter/releases/latest/download/subconverter_linux64.tar.gz
          tar -xzf subconverter_linux64.tar.gz
          chmod +x subconverter/subconverter

      - name: Download and convert rules
        run: |
          mkdir -p output
          RULES=(\
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/LocalAreaNetwork.yaml LAN.snippet DIRECT" \
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanAD.yaml BlockAdAlliance.snippet REJECT" \
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanProgramAD.yaml BlockAds.snippet REJECT" \
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaDomain.yaml ChinaDomain.snippet DIRECT" \
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Apple.yaml Apple.snippet DIRECT" \
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Microsoft.yaml Microsoft.snippet DIRECT" \
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyLite.yaml ProxyLite.snippet PROXY" \
          )

          any_snippet_generated=false

          for entry in "${RULES[@]}"; do
            read -r url filename policy <<< "$entry"
            wget -O input.yaml "$url"

            ./subconverter/subconverter -g -i input.yaml -o output/qx_output.conf -f quantumult

            if [ -f output/qx_output.conf ]; then
              sed "/^HOST\|DOMAIN/s/,.*,/,${policy,,}/" output/qx_output.conf > output/$filename
              any_snippet_generated=true
            fi
          done

          echo "::set-output name=has_snippet::$any_snippet_generated"

      - name: Commit and push
        if: steps.download-and-convert.outputs.has_snippet == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add output/*.snippet
          git commit -m "Weekly update: sync ACL rules for QuantumultX"
          git push
